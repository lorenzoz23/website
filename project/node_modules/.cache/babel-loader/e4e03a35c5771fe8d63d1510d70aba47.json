{"ast":null,"code":"var _jsxFileName = \"/Users/lorenzozenitsky/Documents/website/project/frontend/src/components/Email.tsx\";\nimport React, { useState } from \"react\";\nimport { Collapsible, Button, Box, Form, FormField, TextInput, TextArea, ResponsiveContext, Layer, Heading, Text, Anchor } from \"grommet\";\nimport { FormClose, Contact, Mail, Refresh } from \"grommet-icons\";\nconst defaultFormValues = {\n  name: \"\",\n  email: \"\",\n  subject: \"\",\n  message: \"\"\n};\nconst defaultNotificationValues = {\n  show: false,\n  header: \"\",\n  body: \"\"\n};\n\nconst Email = props => {\n  const [formValue, setFormValue] = useState(defaultFormValues);\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [smallHeaderText, setSmallHeaderText] = useState(\"send an email!\");\n  const [notificationObject, setShowNotificationObject] = useState(defaultNotificationValues);\n\n  const formChange = value => {\n    setFormValue(value);\n    console.log(value);\n  };\n\n  const submitEmailForm = size => {\n    console.log(\"submitted\");\n    setFormValue(defaultFormValues);\n    fetch(\"/send\", {\n      method: \"POST\",\n      body: JSON.stringify(formValue),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"\n      }\n    }).then(resp => resp.json()).then(resp => {\n      if (resp.status === \"success\") {\n        if (size === \"large\") {\n          setShowSidebar(!showSidebar);\n          const obj = {\n            show: true,\n            header: \"success!\",\n            body: \"your email has just been sent\"\n          };\n          setShowNotificationObject(obj);\n        } else {\n          setSmallHeaderText(\"email sent!\");\n        }\n      } else if (resp.status === \"fail\") {\n        if (size === \"large\") {\n          setShowSidebar(!showSidebar);\n          const obj = {\n            show: true,\n            header: \"error!\",\n            body: \"your email failed to send\"\n          };\n          setShowNotificationObject(obj);\n        } else {\n          setSmallHeaderText(\"failed to send email!\");\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ResponsiveContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, size => /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, props.text ? /*#__PURE__*/React.createElement(Anchor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, props.text) : /*#__PURE__*/React.createElement(Button, {\n    title: \"email\",\n    primary: true,\n    focusIndicator: props.mode === \"light\" ? true : false,\n    color: props.mode === \"light\" ? \"brand\" : \"accent-1\",\n    icon: /*#__PURE__*/React.createElement(Contact, {\n      color: props.mode === \"light\" ? \"accent-1\" : \"brand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }),\n    onClick: () => setShowSidebar(!showSidebar),\n    style: {\n      position: \"fixed\",\n      bottom: \"20px\",\n      right: \"30px\",\n      zIndex: 99,\n      padding: \"15px\",\n      display: showSidebar ? \"none\" : \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), !showSidebar || size === \"large\" ? /*#__PURE__*/React.createElement(Collapsible, {\n    direction: \"horizontal\",\n    open: showSidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    focusIndicator: false,\n    icon: /*#__PURE__*/React.createElement(FormClose, {\n      color: props.mode === \"light\" ? \"brand\" : \"accent-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }),\n    onClick: () => setShowSidebar(!showSidebar),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    flex: true,\n    pad: {\n      bottom: \"medium\",\n      left: \"medium\",\n      right: \"medium\"\n    },\n    width: \"large\",\n    background: \"light-1\",\n    elevation: props.mode === \"light\" ? \"small\" : \"none\",\n    align: \"center\",\n    justify: \"center\",\n    overflow: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"send an email!\"), /*#__PURE__*/React.createElement(Form, {\n    value: formValue,\n    onChange: nextValue => formChange(nextValue),\n    onReset: () => setFormValue(defaultFormValues),\n    onSubmit: () => submitEmailForm(size),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    gap: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    name: \"name\",\n    htmlFor: \"text-input-id\",\n    label: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    id: \"text-input-id\",\n    name: \"name\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(FormField, {\n    name: \"email\",\n    htmlFor: \"email-input-id\",\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    id: \"email-input-id\",\n    name: \"email\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(FormField, {\n    name: \"subject\",\n    htmlFor: \"subject-input-id\",\n    label: \"subject\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    id: \"subject-input-id\",\n    name: \"subject\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormField, {\n    name: \"message\",\n    htmlFor: \"message-input-id\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    name: \"message\",\n    resize: \"horizontal\",\n    focusIndicator: true,\n    size: \"large\",\n    id: \"message-input-id\",\n    placeholder: \"type your message here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    gap: \"medium\",\n    justify: \"between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    primary: true,\n    label: \"send\",\n    icon: /*#__PURE__*/React.createElement(Mail, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }),\n    reverse: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"reset\",\n    label: \"reset\",\n    reverse: true,\n    icon: /*#__PURE__*/React.createElement(Refresh, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }))), notificationObject.show && /*#__PURE__*/React.createElement(Layer, {\n    position: \"center\",\n    onClickOutside: () => setShowNotificationObject(defaultNotificationValues),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    justify: \"center\",\n    align: \"center\",\n    pad: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    level: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 23\n    }\n  }, notificationObject.header), /*#__PURE__*/React.createElement(Box, {\n    gap: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, notificationObject.body), /*#__PURE__*/React.createElement(Button, {\n    title: \"close\",\n    alignSelf: \"center\",\n    size: \"small\",\n    icon: /*#__PURE__*/React.createElement(FormClose, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 33\n      }\n    }),\n    primary: true,\n    onClick: () => setShowNotificationObject(defaultNotificationValues),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  })))))) : /*#__PURE__*/React.createElement(Layer, {\n    position: \"center\",\n    onClickOutside: () => setShowSidebar(!showSidebar),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    pad: {\n      bottom: \"xlarge\",\n      top: \"large\"\n    },\n    flex: true,\n    background: props.mode === \"light\" ? \"light-2\" : \"home\",\n    align: \"center\",\n    justify: \"center\",\n    overflow: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, smallHeaderText), /*#__PURE__*/React.createElement(Form, {\n    value: formValue,\n    onChange: nextValue => formChange(nextValue),\n    onReset: () => setFormValue(defaultFormValues),\n    onSubmit: () => submitEmailForm(size),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    gap: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    margin: {\n      left: \"medium\",\n      right: \"medium\",\n      top: \"medium\",\n      bottom: \"medium\"\n    },\n    name: \"name\",\n    htmlFor: \"text-input-id\",\n    label: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    id: \"text-input-id\",\n    name: \"name\",\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(FormField, {\n    margin: {\n      left: \"medium\",\n      right: \"medium\",\n      top: \"medium\",\n      bottom: \"medium\"\n    },\n    name: \"email\",\n    htmlFor: \"email-input-id\",\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    id: \"email-input-id\",\n    name: \"email\",\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(FormField, {\n    margin: {\n      left: \"medium\",\n      right: \"medium\",\n      top: \"medium\",\n      bottom: \"medium\"\n    },\n    name: \"subject\",\n    htmlFor: \"subject-input-id\",\n    label: \"subject\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    id: \"subject-input-id\",\n    name: \"subject\",\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormField, {\n    name: \"message\",\n    htmlFor: \"message-input-id\",\n    required: true,\n    margin: {\n      left: \"medium\",\n      right: \"medium\",\n      top: \"medium\",\n      bottom: \"medium\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    name: \"message\",\n    style: {\n      fontSize: \"18px\"\n    },\n    size: \"large\",\n    focusIndicator: true,\n    id: \"message-input-id\",\n    placeholder: \"type your message here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    justify: \"between\",\n    margin: \"medium\",\n    gap: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    color: \"status-ok\",\n    size: \"small\",\n    icon: /*#__PURE__*/React.createElement(Mail, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 29\n      }\n    }),\n    reverse: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"reset\",\n    color: \"status-warning\",\n    size: \"small\",\n    icon: /*#__PURE__*/React.createElement(Refresh, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 29\n      }\n    }),\n    reverse: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    color: \"status-critical\",\n    size: \"small\",\n    icon: /*#__PURE__*/React.createElement(FormClose, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 29\n      }\n    }),\n    reverse: true,\n    onClick: () => setShowSidebar(!showSidebar),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  })))))));\n};\n\nexport default Email;","map":{"version":3,"sources":["/Users/lorenzozenitsky/Documents/website/project/frontend/src/components/Email.tsx"],"names":["React","useState","Collapsible","Button","Box","Form","FormField","TextInput","TextArea","ResponsiveContext","Layer","Heading","Text","Anchor","FormClose","Contact","Mail","Refresh","defaultFormValues","name","email","subject","message","defaultNotificationValues","show","header","body","Email","props","formValue","setFormValue","showSidebar","setShowSidebar","smallHeaderText","setSmallHeaderText","notificationObject","setShowNotificationObject","formChange","value","console","log","submitEmailForm","size","fetch","method","JSON","stringify","headers","Accept","then","resp","json","status","obj","text","mode","position","bottom","right","zIndex","padding","display","left","nextValue","top","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Collapsible,\n  Button,\n  Box,\n  Form,\n  FormField,\n  TextInput,\n  TextArea,\n  ResponsiveContext,\n  Layer,\n  Heading,\n  Text,\n  Anchor\n} from \"grommet\";\nimport { FormClose, Contact, Mail, Refresh } from \"grommet-icons\";\n\nconst defaultFormValues = {\n  name: \"\",\n  email: \"\",\n  subject: \"\",\n  message: \"\"\n};\n\nconst defaultNotificationValues = {\n  show: false,\n  header: \"\",\n  body: \"\"\n};\nconst Email = (props: any) => {\n  const [formValue, setFormValue] = useState(defaultFormValues);\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [smallHeaderText, setSmallHeaderText] = useState(\"send an email!\");\n  const [notificationObject, setShowNotificationObject] = useState(\n    defaultNotificationValues\n  );\n\n  const formChange = (value: any) => {\n    setFormValue(value);\n    console.log(value);\n  };\n\n  const submitEmailForm = (size: string) => {\n    console.log(\"submitted\");\n    setFormValue(defaultFormValues);\n\n    fetch(\"/send\", {\n      method: \"POST\",\n      body: JSON.stringify(formValue),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"\n      }\n    })\n      .then((resp) => resp.json())\n      .then((resp) => {\n        if (resp.status === \"success\") {\n          if (size === \"large\") {\n            setShowSidebar(!showSidebar);\n            const obj = {\n              show: true,\n              header: \"success!\",\n              body: \"your email has just been sent\"\n            };\n            setShowNotificationObject(obj);\n          } else {\n            setSmallHeaderText(\"email sent!\");\n          }\n        } else if (resp.status === \"fail\") {\n          if (size === \"large\") {\n            setShowSidebar(!showSidebar);\n            const obj = {\n              show: true,\n              header: \"error!\",\n              body: \"your email failed to send\"\n            };\n            setShowNotificationObject(obj);\n          } else {\n            setSmallHeaderText(\"failed to send email!\");\n          }\n        }\n      });\n  };\n\n  return (\n    <ResponsiveContext.Consumer>\n      {(size) => (\n        <Box direction=\"row\">\n          {props.text ? (\n            <Anchor>{props.text}</Anchor>\n          ) : (\n            <Button\n              title=\"email\"\n              primary\n              focusIndicator={props.mode === \"light\" ? true : false}\n              color={props.mode === \"light\" ? \"brand\" : \"accent-1\"}\n              icon={\n                <Contact\n                  color={props.mode === \"light\" ? \"accent-1\" : \"brand\"}\n                />\n              }\n              onClick={() => setShowSidebar(!showSidebar)}\n              style={{\n                position: \"fixed\",\n                bottom: \"20px\",\n                right: \"30px\",\n                zIndex: 99,\n                padding: \"15px\",\n                display: showSidebar ? \"none\" : \"inline\"\n              }}\n            />\n          )}\n\n          {!showSidebar || size === \"large\" ? (\n            <Collapsible direction=\"horizontal\" open={showSidebar}>\n              <Button\n                focusIndicator={false}\n                icon={\n                  <FormClose\n                    color={props.mode === \"light\" ? \"brand\" : \"accent-1\"}\n                  />\n                }\n                onClick={() => setShowSidebar(!showSidebar)}\n              />\n              <Box\n                flex\n                pad={{ bottom: \"medium\", left: \"medium\", right: \"medium\" }}\n                width=\"large\"\n                background=\"light-1\"\n                elevation={props.mode === \"light\" ? \"small\" : \"none\"}\n                align=\"center\"\n                justify=\"center\"\n                overflow=\"auto\"\n              >\n                <Heading>send an email!</Heading>\n                <Form\n                  value={formValue}\n                  onChange={(nextValue: React.SetStateAction<{}>) =>\n                    formChange(nextValue)\n                  }\n                  onReset={() => setFormValue(defaultFormValues)}\n                  onSubmit={() => submitEmailForm(size)}\n                >\n                  <Box direction=\"row\" gap=\"small\">\n                    <FormField name=\"name\" htmlFor=\"text-input-id\" label=\"name\">\n                      <TextInput id=\"text-input-id\" name=\"name\" size=\"large\" />\n                    </FormField>\n                    <FormField\n                      name=\"email\"\n                      htmlFor=\"email-input-id\"\n                      label=\"email\"\n                      required\n                    >\n                      <TextInput\n                        id=\"email-input-id\"\n                        name=\"email\"\n                        size=\"large\"\n                      />\n                    </FormField>\n                  </Box>\n                  <FormField\n                    name=\"subject\"\n                    htmlFor=\"subject-input-id\"\n                    label=\"subject\"\n                  >\n                    <TextInput\n                      id=\"subject-input-id\"\n                      name=\"subject\"\n                      size=\"large\"\n                    />\n                  </FormField>\n                  <FormField name=\"message\" htmlFor=\"message-input-id\" required>\n                    <TextArea\n                      name=\"message\"\n                      resize=\"horizontal\"\n                      focusIndicator\n                      size=\"large\"\n                      id=\"message-input-id\"\n                      placeholder=\"type your message here...\"\n                    />\n                  </FormField>\n                  <Box direction=\"row\" gap=\"medium\" justify=\"between\">\n                    <Button\n                      type=\"submit\"\n                      primary\n                      label=\"send\"\n                      icon={<Mail />}\n                      reverse\n                    />\n                    <Button\n                      type=\"reset\"\n                      label=\"reset\"\n                      reverse\n                      icon={<Refresh />}\n                    />\n                  </Box>\n                </Form>\n                {notificationObject.show && (\n                  <Layer\n                    position=\"center\"\n                    onClickOutside={() =>\n                      setShowNotificationObject(defaultNotificationValues)\n                    }\n                  >\n                    <Box justify=\"center\" align=\"center\" pad=\"medium\">\n                      <Heading level=\"2\">{notificationObject.header}</Heading>\n                      <Box gap=\"medium\">\n                        <Text>{notificationObject.body}</Text>\n                        <Button\n                          title=\"close\"\n                          alignSelf=\"center\"\n                          size=\"small\"\n                          icon={<FormClose />}\n                          primary\n                          onClick={() =>\n                            setShowNotificationObject(defaultNotificationValues)\n                          }\n                        />\n                      </Box>\n                    </Box>\n                  </Layer>\n                )}\n              </Box>\n            </Collapsible>\n          ) : (\n            <Layer\n              position=\"center\"\n              onClickOutside={() => setShowSidebar(!showSidebar)}\n            >\n              <Box\n                margin=\"small\"\n                pad={{ bottom: \"xlarge\", top: \"large\" }}\n                flex\n                background={props.mode === \"light\" ? \"light-2\" : \"home\"}\n                align=\"center\"\n                justify=\"center\"\n                overflow=\"auto\"\n              >\n                <Heading>{smallHeaderText}</Heading>\n                <Form\n                  value={formValue}\n                  onChange={(nextValue: any) => formChange(nextValue)}\n                  onReset={() => setFormValue(defaultFormValues)}\n                  onSubmit={() => submitEmailForm(size)}\n                >\n                  <Box direction=\"row\" gap=\"small\">\n                    <FormField\n                      margin={{\n                        left: \"medium\",\n                        right: \"medium\",\n                        top: \"medium\",\n                        bottom: \"medium\"\n                      }}\n                      name=\"name\"\n                      htmlFor=\"text-input-id\"\n                      label=\"name\"\n                    >\n                      <TextInput id=\"text-input-id\" name=\"name\" size=\"medium\" />\n                    </FormField>\n                    <FormField\n                      margin={{\n                        left: \"medium\",\n                        right: \"medium\",\n                        top: \"medium\",\n                        bottom: \"medium\"\n                      }}\n                      name=\"email\"\n                      htmlFor=\"email-input-id\"\n                      label=\"email\"\n                      required\n                    >\n                      <TextInput\n                        id=\"email-input-id\"\n                        name=\"email\"\n                        size=\"medium\"\n                      />\n                    </FormField>\n                  </Box>\n                  <FormField\n                    margin={{\n                      left: \"medium\",\n                      right: \"medium\",\n                      top: \"medium\",\n                      bottom: \"medium\"\n                    }}\n                    name=\"subject\"\n                    htmlFor=\"subject-input-id\"\n                    label=\"subject\"\n                  >\n                    <TextInput\n                      id=\"subject-input-id\"\n                      name=\"subject\"\n                      size=\"medium\"\n                    />\n                  </FormField>\n                  <FormField\n                    name=\"message\"\n                    htmlFor=\"message-input-id\"\n                    required\n                    margin={{\n                      left: \"medium\",\n                      right: \"medium\",\n                      top: \"medium\",\n                      bottom: \"medium\"\n                    }}\n                  >\n                    <TextArea\n                      name=\"message\"\n                      style={{ fontSize: \"18px\" }}\n                      size=\"large\"\n                      focusIndicator\n                      id=\"message-input-id\"\n                      placeholder=\"type your message here...\"\n                    />\n                  </FormField>\n                  <Box\n                    direction=\"row\"\n                    justify=\"between\"\n                    margin=\"medium\"\n                    gap=\"small\"\n                  >\n                    <Button\n                      primary\n                      type=\"submit\"\n                      color=\"status-ok\"\n                      size=\"small\"\n                      icon={<Mail />}\n                      reverse\n                    />\n                    <Button\n                      primary\n                      type=\"reset\"\n                      color=\"status-warning\"\n                      size=\"small\"\n                      icon={<Refresh />}\n                      reverse\n                    />\n                    <Button\n                      primary\n                      color=\"status-critical\"\n                      size=\"small\"\n                      icon={<FormClose />}\n                      reverse\n                      onClick={() => setShowSidebar(!showSidebar)}\n                    />\n                  </Box>\n                </Form>\n              </Box>\n            </Layer>\n          )}\n        </Box>\n      )}\n    </ResponsiveContext.Consumer>\n  );\n};\n\nexport default Email;\n"]},"metadata":{},"sourceType":"module"}